{"version":3,"sources":["components/ErrorImage/ErrorImage.module.css","components/Modal/Modal.module.css","components/ImageGalleryItem/ImageGalleryItem.module.css","components/Loader/Loader.module.css","components/ImageGallery/ImageGallery.module.css","components/Button/Button.module.css","components/Searchbar/Searchbar.jsx","services/apiService.js","img/—Pngtree—red gradient ring fork symbol_4609561.png","components/ErrorImage/ErrorImage.jsx","components/Loader/Loader.jsx","components/Modal/Modal.jsx","components/ImageGalleryItem/ImageGalleryItem.jsx","components/ImageGallery/ImageGallery.jsx","components/Button/Button.jsx","components/ImagesInfo/ImagesInfo.jsx","App.js","reportWebVitals.js","index.js","components/Searchbar/Searchbar.module.css"],"names":["module","exports","Searchbar","onSubmit","useState","imageName","setImageName","className","style","header","form","event","preventDefault","trim","toast","error","type","btn","label","input","value","autoComplete","autoFocus","placeholder","onChange","currentTarget","toLowerCase","api","fetchImages","name","page","fetch","then","response","ok","json","Promise","reject","Error","ErrorImage","message","role","errorWrapper","src","errorImage","width","alt","text","LoaderSpinner","overlay","color","height","timeout","modalRoot","document","querySelector","Modal","onClose","isFirstRender","useRef","useEffect","current","window","addEventListener","handleKeyDown","removeEventListener","e","code","console","log","createPortal","backdrop","onClick","target","modal","ImageGalleryItem","largeImageUrl","showModal","setShowModal","toggleModal","item","image","ImageGallery","images","list","map","webformatURL","tags","largeImageURL","id","Btn","onLoadMore","Status","ImagesInfo","prevName","setImages","setError","status","setStatus","setPage","apiService","newImages","total","prevImages","hits","catch","finally","scrollTo","top","documentElement","scrollHeight","behavior","Loader","Button","App","autoClose","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.02e4d0f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"ErrorWrapper\":\"ErrorImage_ErrorWrapper__-XVDz\",\"text\":\"ErrorImage_text__IKRHD\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"backdrop\":\"Modal_backdrop__1sy-e\",\"modal\":\"Modal_modal__2duNE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ImageGalleryItem_item__3Zlb-\",\"image\":\"ImageGalleryItem_image__3kwfh\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Loader_overlay__380p4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"ImageGallery_list__v9DM8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"btn\":\"Button_btn__38n7k\"};","// import { ImSearch } from 'react-icons/im';\r\nimport { useState } from 'react';\r\nimport { toast } from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\nimport PropTypes from 'prop-types';\r\nimport style from './Searchbar.module.css';\r\n\r\n\r\nfunction Searchbar({ onSubmit }) {\r\n  const [imageName, setImageName] = useState(''); \r\n\r\n  const handleNameChange = event => {\r\n    setImageName(event.currentTarget.value.toLowerCase());  \r\n  };\r\n\r\n  const handleSubmit = event => {\r\n    event.preventDefault();\r\n    \r\n    if (imageName.trim() === '') {\r\n\r\n      toast.error('Enter a value to search');\r\n      return; \r\n    }\r\n\r\n    onSubmit(imageName); \r\n    setImageName('');\r\n  };\r\n\r\n  return (\r\n    <header className={style.header}>\r\n      <form className={style.form} onSubmit={handleSubmit}>\r\n        <button type=\"submit\" className={style.btn}>\r\n          <span className={style.label}>Search</span>\r\n          {/* <ImSearch  /> */}\r\n        </button>\r\n\r\n        <input\r\n          className={style.input}\r\n          type=\"text\"\r\n          value={imageName} \r\n          autoComplete=\"off\"\r\n          autoFocus\r\n          placeholder=\"Search images\"\r\n          onChange={handleNameChange}\r\n        />\r\n      </form>\r\n    </header>\r\n  );\r\n}\r\n\r\nSearchbar.propTypes = {\r\n  onSubmit: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Searchbar;\r\n","const BASE_URL = 'https://pixabay.com/api';\r\nconst API_KEY = '11349157-fc9c2ea73d90d296f310c891d';\r\n\r\nfunction fetchImages(name, page) {\r\n  return fetch(\r\n    `${BASE_URL}/?q=${name}&page=${page}&key=${API_KEY}&image_type=photo&orientation=horizontal&per_page=12`,\r\n  ).then(response => {\r\n    if (response.ok) {\r\n      return response.json();\r\n    }\r\n    return Promise.reject(new Error(`No picture with name ${name}`));\r\n  });\r\n}\r\n\r\nconst api = { fetchImages };\r\n\r\nexport default api;\r\n","export default __webpack_public_path__ + \"static/media/—Pngtree—red gradient ring fork symbol_4609561.1589bf7d.png\";","import PropTypes from 'prop-types';\r\nimport errorImage from '../../img/—Pngtree—red gradient ring fork symbol_4609561.png';\r\nimport style from './ErrorImage.module.css';\r\n\r\nfunction ErrorImage({ message }) {\r\n  return (\r\n    <div role=\"alert\" className={style.errorWrapper}>\r\n      <img src={errorImage} width=\"550\" alt=\"sadcat\" />\r\n      <p text={message} className={style.text}>\r\n        {message}\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n\r\nErrorImage.propTypes = {\r\n  message: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ErrorImage;\r\n","import Loader from 'react-loader-spinner';\r\nimport 'react-loader-spinner/dist/loader/css/react-spinner-loader.css';\r\nimport style from './Loader.module.css';\r\n\r\nfunction LoaderSpinner() {\r\n  return (\r\n    <div className={style.overlay}>\r\n      <Loader\r\n        type=\"ThreeDots\"\r\n        color=\"#00BFFF\"\r\n        height={100}\r\n        width={100}\r\n        timeout={3000} //3 secs\r\n      />\r\n    </div>\r\n  );\r\n}\r\n\r\n\r\nexport default LoaderSpinner;","import { useRef, useEffect } from 'react';\r\nimport { createPortal } from 'react-dom'; // Для рендера портала\r\nimport style from './Modal.module.css';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst modalRoot = document.querySelector('#modal-root'); \r\n\r\nfunction Modal({ onClose, src, alt }) {\r\n  const isFirstRender = useRef(true);\r\n\r\n  useEffect(() => {\r\n    if (isFirstRender.current) {\r\n      window.addEventListener('keydown', handleKeyDown);\r\n      isFirstRender.current = false;\r\n      return;\r\n    }\r\n    return () => {\r\n      window.removeEventListener('keydown', handleKeyDown);\r\n    };\r\n  });\r\n\r\n  const handleKeyDown = e => {\r\n\r\n    if (e.code === 'Escape') {\r\n      console.log('Нажали ESC, нужно закрыть модалку');\r\n\r\n      onClose(); \r\n    }\r\n  };\r\n\r\n  const handleBackdropClick = event => {\r\n\r\n    if (event.currentTarget === event.target) {\r\n\r\n      onClose(); \r\n    }\r\n  };\r\n\r\n  return createPortal(\r\n    <div className={style.backdrop} onClick={handleBackdropClick}>\r\n      <div className={style.modal}>\r\n        <img src={src} alt={alt} />\r\n      </div>\r\n    </div>,\r\n    modalRoot,\r\n  );\r\n}\r\n\r\nModal.propTypes = {\r\n  onClose: PropTypes.func.isRequired,\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Modal;\r\n","// import React, { Component } from 'react';\r\nimport { useState } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport Modal from '../Modal';\r\nimport style from './ImageGalleryItem.module.css';\r\n\r\nfunction ImageGalleryItem({ src, alt, largeImageUrl }) {\r\n  const [showModal, setShowModal] = useState(false);\r\n\r\n\r\n  const toggleModal = () => {\r\n\r\n    setShowModal(!showModal);\r\n  };\r\n\r\n  return (\r\n    <li className={style.item}>\r\n      <img\r\n        onClick={toggleModal}\r\n        src={src}\r\n        alt={alt}\r\n        className={style.image}\r\n      />\r\n      {showModal && (\r\n        <Modal onClose={toggleModal} src={largeImageUrl} alt={alt} />\r\n      )}\r\n    </li>\r\n  );\r\n}\r\nImageGalleryItem.propTypes = {\r\n  src: PropTypes.string.isRequired,\r\n  alt: PropTypes.string.isRequired,\r\n  largeImageUrl: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImageGalleryItem;\r\n","import PropTypes from 'prop-types';\r\nimport ImageGalleryItem from '../ImageGalleryItem';\r\nimport style from './ImageGallery.module.css';\r\n\r\nfunction ImageGallery({ images }) {\r\n  return (\r\n    <ul className={style.list}>\r\n      {images.map(image => (\r\n        <ImageGalleryItem \r\n          key={image.id}\r\n          src={image.webformatURL}\r\n          alt={image.tags}\r\n          largeImageUrl={image.largeImageURL}\r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n\r\nImageGallery.propTypes = {\r\n  images: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default ImageGallery;\r\n","import PropTypes from 'prop-types';\r\nimport style from './Button.module.css';\r\n\r\nfunction Btn({ onLoadMore }) {\r\n\r\n  \r\n  return (\r\n    <button type=\"button\" className={style.btn} onClick={onLoadMore}>\r\n      Load more\r\n    </button>\r\n  );\r\n}\r\n\r\nBtn.propTypes = {\r\n  onLoadMore: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Btn;","// import { Component } from 'react';\r\nimport { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport apiService from '../../services';\r\nimport ErrorImage from '../ErrorImage';\r\nimport Loader from '../Loader';\r\nimport ImageGallery from '../ImageGallery';\r\nimport Button from '../Button';\r\n\r\nconst Status = {\r\n  IDLE: 'idle',\r\n  PENDING: 'pending',\r\n  RESOLVED: 'resolved',\r\n  REJECTED: 'rejected',\r\n};\r\n\r\nfunction ImagesInfo({ imageName, prevName }) {\r\n  const [images, setImages] = useState([]);\r\n  const [error, setError] = useState(null);\r\n  const [status, setStatus] = useState(Status.IDLE);\r\n  const [page, setPage] = useState(1);\r\n\r\n  useEffect(() => {\r\n    if (imageName !== prevName) {\r\n      setPage(1);\r\n    }\r\n  }, [imageName, prevName]);\r\n\r\n \r\n  useEffect(() => {\r\n    if (imageName === '') {\r\n      return;\r\n    }\r\n\r\n    setStatus(Status.PENDING);\r\n\r\n    apiService\r\n      .fetchImages(imageName, page)\r\n      .then(newImages => {\r\n        if (newImages.total !== 0) {\r\n          setImages(\r\n            prevImages => [...prevImages, ...newImages.hits],\r\n            setStatus(Status.RESOLVED),\r\n          );\r\n          return;\r\n        }\r\n        return Promise.reject(new Error('Invalid request'));\r\n      })\r\n\r\n      .catch(error => {\r\n        setError(error);\r\n        setStatus(Status.REJECTED);\r\n      })\r\n      .finally(() => {\r\n        window.scrollTo({\r\n          top: document.documentElement.scrollHeight - 970,\r\n          behavior: 'smooth',\r\n        });\r\n      });\r\n  }, [imageName, page]);\r\n\r\n  const onLoadMore = () => {\r\n\r\n    setPage(page + 1);\r\n\r\n  };\r\n\r\n  if (status === Status.IDLE) {\r\n    return <p>Please enter your request</p>;\r\n  }\r\n\r\n  if (status === Status.PENDING) {\r\n    return <Loader />;\r\n  }\r\n\r\n  if (status === Status.REJECTED) {\r\n    return <ErrorImage message={error.message} />;\r\n  }\r\n\r\n  if (status === Status.RESOLVED) {\r\n    return (\r\n      <>\r\n        <ImageGallery images={images} />\r\n        {/* page={this.state.page} */}\r\n        <Button onLoadMore={onLoadMore} />\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nImagesInfo.propTypes = {\r\n  imageName: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ImagesInfo;\r\n","// import React, { Component } from 'react';\n\nimport { useState } from 'react';\nimport { ToastContainer } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Searchbar from './components/Searchbar';\nimport ImagesInfo from './components/ImagesInfo';\n\nfunction App() {\n  const [imageName, setImageName] = useState('');\n\n  const handleFormSubmit = name => {\n    setImageName(name);\n  };\n\n  return (\n    <>\n      <Searchbar onSubmit={handleFormSubmit} />\n      <ImagesInfo imageName={imageName} />\n      <ToastContainer autoClose={3000} />\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Searchbar_header__3monq\",\"form\":\"Searchbar_form__3RMCJ\",\"btn\":\"Searchbar_btn__3z3vg\",\"label\":\"Searchbar_label__3ta4b\",\"input\":\"Searchbar_input__2ksMf\"};"],"sourceRoot":""}